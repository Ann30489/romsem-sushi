import React, { useEffect, useRef, useState } from "react";
import Input from "../input/Input";
import Textarea from "../textarea/Textarea";
import Post from "../post/Post";
import styles from "./Posts.module.scss";

const Posts = () => {
  const staticPosts = [
    {
      title:
        "–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –∏ –≤–∫—É—Å–Ω—ã–µ —Ä–æ–ª–ª—ã –∏ —Å—É—à–∏ !!! –° —Å–µ–Ω—Ç—è–±—Ä—è —É–∂–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª —Ä–∞–∑ 10, –∏ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤—Å–µ –Ω–∞ –º–µ–≥–∞ —É—Ä–æ–≤–Ω–µ. –ù—Ä–∞–≤—è—Ç—Å—è –≤—Å–µ–π —Å–µ–º—å–µ !!! –ë—ã—Å—Ç—Ä–æ, –≤–∫—É—Å–Ω–æ –∏ –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–µ–µ ))) –†–ï–ö–û–ú–ï–ù–î–£–Æ!!!",
      name: "–ù—É—Ä–±–µ–∫",
      id: "post-1",
      date: "10 –º–∞—Ä—Ç–∞ 2021 –≥., 16:15",
    },
    {
      title:
        "–°–µ–≥–æ–¥–Ω—è –æ–ø—è—Ç—å –∑–∞–∫–∞–∑–∞–ª–∏. –ù–µ —É—Å—Ç–∞–Ω—É –ø–∏—Å–∞—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã! üôÇ –û–æ–æ—á–µ–Ω—å –≤–∫—É—Å–Ω–æ! –†–æ–ª–ª—ã —Å–≤–µ–∂–∏–µ, –±–æ–ª—å—à–∏–µ, –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–µ! –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –±–æ–Ω—É—Å! üôÇ",
      name: "–î–∏–Ω–∞—Ä–∞",
      id: "post-2",
      date: "25 –∞–≤–≥—É—Å—Ç–∞ 2021 –≥., 10:23",
    },
    {
      title:
        "–û—á–µ–Ω—å –≤–∫—É—Å–Ω—ã–µ —Å—É—à–∏. –ó–∞–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ –≤–ø–µ—Ä–≤—ã–µ, –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ –∏ –ø–æ—Ä—Ü–∏–∏ –±–æ–ª—å—à–∏–µ. –î–æ—Å—Ç–∞–≤–ª—è—é—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ.",
      name: "–£–º–∞—Ä",
      id: "post-3",
      date: "24 –Ω–æ—è–±—Ä—è 2021 –≥., 22:46",
    },
    {
      title:
        "–°–µ–≥–æ–¥–Ω—è –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏ —Ä–æ–ª–ª—ã –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—é. –í—Å—ë –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –æ—á–µ–Ω—å –≤–∫—É—Å–Ω–æ, –±–æ–ª—å—à–∏–µ —Ä–æ–ª–ª—ã, –∫–∞—á–µ—Å—Ç–≤–æ –∏ –≤–∫—É—Å –æ—Ç–ª–∏—á–Ω—ã–µ. –ï—â—ë –∏ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ —Ä–æ–ª–ª—ã - –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ. –ë—É–¥–µ–º –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –∏ –¥–∞–ª—å—à–µ!",
      name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
      id: "post-4",
      date: "02 –¥–µ–∫–∞–±—Ä—è 2021 –≥., 20:17",
    },
    {
      title:
        "–û—á–µ–Ω—å –≤–∫—É—Å–Ω—ã–µ —Ä–æ–ª–ª—ã! –ö—Ä—É–ø–Ω—ã–µ, —Å–æ—á–Ω—ã–µ. –†—ã–±–∫–∞ –Ω–∞–∏—Å–≤–µ–∂–∞–π—à–∞—è, –Ω–µ–∂–Ω–∞—è. –ò —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —É–¥–∞—á–Ω–æ–µ. –ü–ª—é—Å –ø—Ä–∏—è—Ç–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º. –ë–µ–∑—É–º–Ω–æ –ø–æ—Ä–∞–¥–æ–≤–∞–ª–∏, —Å–ø–∞—Å–∏–±–æ! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω–µ–º—Å—è. –ü—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—è –∏ —É—Å–ø–µ—Ö–∞ –∫–æ–º–ø–∞–Ω–∏–∏!",
      name: "–≠–ª—å–Ω—É—Ä–∞",
      id: "post-5",
      date: "13 –¥–µ–∫–∞–±—Ä—è 2021 –≥., 12:28",
    },
  ];
  const localPosts = JSON.parse(localStorage.getItem("posts"));
  const [posts, setPosts] = useState(localPosts ? localPosts : staticPosts);
  const [messageWarn, setMessageWarn] = useState("");
  const [wordCount, setWordCount] = useState(0);
  const [textValue, setTextValue] = useState("");
  const inputRef = useRef();
  const inputName = useRef();

  useEffect(() => {
    localStorage.setItem("posts", JSON.stringify(posts));
  }, [posts]);

  const addPost = (e) => {
    e.preventDefault();
    const date = new Date().toLocaleString("ru", {
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "numeric",
      minute: "numeric",
    });
    if (inputRef.current.value === "" || inputName.current.value === "") {
      setMessageWarn("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
    } else {
      setPosts([
        ...posts,
        {
          title: inputRef.current.value,
          name: inputName.current.value,
          id: Date.now(),
          date: date,
        },
      ]);
      setMessageWarn("");
      inputName.current.value = "";
      setTextValue("");
      setWordCount(0);
    }
  };

  useEffect(() => {
    if (messageWarn) {
      setTimeout(() => {
        setMessageWarn("");
      }, 3000);
    }
  }, [messageWarn]);

  return (
    <>
      <div className={styles.posts}>
        <div className={styles.posts__wrapper}>
          <p className={styles.posts__title}>–û—Ç–∑—ã–≤—ã</p>
          {/* Form */}
          <form className={styles.posts__form}>
            <div className={styles.inputArea}>
              <div className={styles.inputContainer}>
                <label htmlFor="name" id={styles.nameLable}>
                  <i>–ò–º—è:</i>
                </label>
                <Input
                  className={styles.inputField}
                  id={styles.name}
                  type={"text"}
                  ref={inputName}
                  maxLength="50"
                />
              </div>
              <div className={styles.inputContainer}>
                <label htmlFor="text" id={styles.textLable}>
                  <i>–¢–µ–∫—Å—Ç:</i>
                </label>
                <Textarea
                  value={textValue}
                  onChange={(e) => {
                    setTextValue(e.target.value);
                    setWordCount(e.target.value.length);
                  }}
                  className={styles.inputField}
                  id={styles.text}
                  type={"text"}
                  ref={inputRef}
                  maxLength="2000"
                />
                <p className={styles.inputWordCount}>
                  <span>{wordCount}</span>/2000
                </p>
              </div>
              <p className={styles.posts__warn}>{messageWarn}</p>
            </div>
            <button
              className={styles.posts__button}
              type="submit"
              onClick={addPost}
            >
              <span>+ –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</span>
            </button>
          </form>
          {/* List */}
          <ul className={styles.posts__list}>
            {posts.map((post) => (
              <li className={styles.posts__item} key={"Post-" + post.id}>
                <Post title={post.title} date={post.date} name={post.name} />
              </li>
            ))}
          </ul>
        </div>
      </div>
    </>
  );
};

export default Posts;
